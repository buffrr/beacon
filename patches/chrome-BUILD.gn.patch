diff --git a/chrome/BUILD.gn b/chrome/BUILD.gn
index 51555df59f2bf9d0f396b9ffea0524a2533274ec..9a53417e7e48dc70b8b4c0d166353989af1e131c 100644
--- a/chrome/BUILD.gn
+++ b/chrome/BUILD.gn
@@ -170,6 +170,7 @@ if (!is_android && !is_mac) {
         "common/crash_keys.cc",
         "common/crash_keys.h",
       ]
+      sources -= [ "app/chrome_exe.rc", ] sources += [ "//beacon/app/beacon_exe.rc" ]
 
       deps += [
         ":chrome_dll",
@@ -462,10 +463,12 @@ if (is_win) {
     }
   }
 
+  copy("beacon_app_plist") { deps = [ "//beacon:beacon_app_plist" ] sources = [ "$root_gen_dir/beacon/beacon_app_plist_tweaked.plist" ] outputs = [ "$root_gen_dir/chrome/{{source_file_part}}" ] }
   mac_app_bundle("chrome_app") {
     output_name = chrome_product_full_name
 
     info_plist_target = ":chrome_app_plist"
+    info_plist_target = ":beacon_app_plist"
     extra_substitutions = [
       "CHROMIUM_BUNDLE_ID=$chrome_mac_bundle_id",
       "CHROMIUM_SHORT_NAME=$chrome_product_short_name",
@@ -485,6 +488,7 @@ if (is_win) {
       "//chrome/common:buildflags",
       "//chrome/common:version_header",
     ]
+    deps += [ "//beacon:beacon_app" ]
 
     if (enable_stripping) {
       # At link time, preserve the global symbols specified in the .exports
@@ -679,6 +683,7 @@ if (is_win) {
     ]
   }
 
+  copy("beacon_helper_plist") { deps = [ "//beacon:beacon_helper_plist" ] sources = [ "$root_gen_dir/beacon/beacon_helper_plist_tweaked.plist" ] outputs = [ "$root_gen_dir/chrome/{{source_file_part}}" ] }
   compile_entitlements("entitlements") {
     entitlements_templates = [ "app/app-entitlements.plist" ]
     if (is_chrome_branded) {
@@ -705,6 +710,7 @@ if (is_win) {
         info_plist_target = invoker.info_plist_target
       } else {
         info_plist_target = ":chrome_helper_plist"
+        info_plist_target = ":beacon_helper_plist"
       }
 
       extra_substitutions = [
@@ -1203,6 +1209,7 @@ if (is_win) {
       chrome_dylib_version,
       "-Wl,-order_file," + rebase_path("app/framework.order", root_build_dir),
     ]
+    import("//beacon/browser/sources.gni") public_deps += beacon_chrome_framework_public_deps bundle_deps += beacon_chrome_framework_bundle_deps framework_contents += beacon_chrome_framework_contents ldflags += beacon_chrome_framework_ldflags
 
     if (!is_component_build) {
       # Specify a sensible install_name for static builds. The library is
@@ -1390,6 +1397,7 @@ if (is_win) {
 
 group("browser_dependencies") {
   public_deps = [
+    "//beacon:browser_dependencies",
     "//build:branding_buildflags",
     "//build:chromeos_buildflags",
     "//chrome/browser",
@@ -1502,7 +1510,7 @@ group("child_dependencies") {
 
 if (is_win) {
   process_version_rc_template("chrome_exe_version") {
-    sources = [ "app/chrome_exe.ver" ]
+    sources = [ "//beacon/app/beacon_exe.ver" ]
     output = "$target_gen_dir/chrome_exe_version.rc"
   }
 
@@ -1556,6 +1564,7 @@ group("resources") {
     "//chrome/browser:resources",
     "//chrome/common:resources",
     "//chrome/renderer:resources",
+    "//beacon:resources",
   ]
 }
 
